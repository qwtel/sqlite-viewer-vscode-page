/*--------------------------------------------------------------
# Variables, functions and mixins
--------------------------------------------------------------*/
@use "abstracts/variables";
@use "abstracts/functions";
@use "abstracts/mixins";
@use 'abstracts/include-media';

/*--------------------------------------------------------------
1.0 Normalize
  * normalize.css v7.0.0 | MIT License
  * github.com/necolas/normalize.css
--------------------------------------------------------------*/
@use "normalize";

/*--------------------------------------------------------------
# Base
--------------------------------------------------------------*/
@use "base/base";

/*--------------------------------------------------------------
# Typography
--------------------------------------------------------------*/
@use "base/typography";

/*--------------------------------------------------------------
# Helpers
--------------------------------------------------------------*/
@use "base/helpers";

/*--------------------------------------------------------------
# Forms
--------------------------------------------------------------*/
@use "components/forms";

/*--------------------------------------------------------------
# Buttons
--------------------------------------------------------------*/
@use "components/buttons";

/*--------------------------------------------------------------
# Changelog Carousel
--------------------------------------------------------------*/
@use "components/changelog-carousel";

/*--------------------------------------------------------------
# Header
--------------------------------------------------------------*/
@use "layout/header";

/*--------------------------------------------------------------
# Hero
--------------------------------------------------------------*/
@use "layout/hero";

/*--------------------------------------------------------------
# Features
--------------------------------------------------------------*/
@use "layout/features";

/*--------------------------------------------------------------
# Pricing
--------------------------------------------------------------*/
@use "layout/pricing";

/*--------------------------------------------------------------
# CTA
--------------------------------------------------------------*/
@use "layout/cta";

/*--------------------------------------------------------------
# Site content
--------------------------------------------------------------*/
@use "layout/main";

/*--------------------------------------------------------------
# Footer
--------------------------------------------------------------*/
@use "layout/footer";

/*--------------------------------------------------------------
# VS Code / Cards
--------------------------------------------------------------*/
@layer app, base;

.vscode-only {
  display: none;
}
.vscode .vscode-only {
  display: unset;
}
.vscode .web-only {
  display: none;
}

.proof-inner {
  margin-top: 64px;
  margin-bottom: 64px;
  padding-top: 0;
  padding-bottom: 0;
}

#cards {
  --card-margin: 64px;
  --card-top-offset: 1em;
  --outline-width: 0px;
  padding: 0;
  margin-top: 88px;
  padding-bottom: calc((var(--num-cards) - 1) * var(--card-top-offset));
  list-style: none;
  outline: calc(var(--outline-width) * 10) solid hotpink;
  display: grid;
  gap: var(--card-margin);
  grid-template-columns: 100%;
  grid-template-rows: repeat(var(--num-cards), 1fr);

  @media (max-height: 800px) {
    --card-margin: 32px;
    grid-template-rows: repeat(var(--num-cards), auto);
  }
}

#root {
  background: functions.color(bg, 3);
  aspect-ratio: 1160/600;
  @media (max-aspect-ratio: 1/1) {
    aspect-ratio: unset;
    height: 80vh;
  }
}

.cards {
  @include include-media.media('>xxlarge') {
    margin-left: -2rem;
    margin-right: -2rem;
  }
}

.card {
  outline: var(--outline-width) solid lime;
}

.card__content {
  @include mixins.shadow;
  background: functions.color(bg, 3);
  color: functions.color(typography, 1);
  border-radius: .25rem;

  display: grid;
  grid-template-areas: "text img";
  grid-template-columns: 1fr 2fr;
  grid-template-rows: 100%;

  align-items: stretch;
  outline: var(--outline-width) solid blue;

  @media (max-width: 768px) {
    grid-template-columns: 100%;
    grid-template-rows: auto 1fr;
    grid-template-areas: "img"
                         "text";
  }
}

.card__content > div:not(.card__header) {
  grid-area: text;
  width: 80%;
  place-self: center;
  text-align: left;
  overflow: hidden;
  overflow: clip;
  display: grid;
  place-items: start;
  padding-top: 12px;
  padding-bottom: 12px;

  // Headers take up space and mess up the layout. Easier to just hide them between the problematic breakpoints
  & > h3 {
    margin-top: 12px;
    @media (max-width: 426px) {
      display: none;
    }
    @media (min-width: 640px) {
      display: none;
    }
    @media (min-width: 1024px) {
      display: inherit;
    }
  }
}

.card__content > figure {
  grid-area: img;
  margin: 0;
  border-top-right-radius: .25rem;
  border-bottom-right-radius: .25rem;
  overflow: hidden;
  overflow: clip;
  aspect-ratio: 4 / 3;
  position: relative;
  width: 100%;

  & > img, & > video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media (min-width: 768px) {
    border-left: 1px solid functions.color(bg, 4);
  }

  @media (max-width: 768px) {
    border-top-left-radius: .25rem;
    border-bottom-right-radius: 0;
  }
}

/* --- */

#cards {
  --card-top: calc(60px + 16px + var(--card-top-offset));
}

.card {
  --index0: calc(var(--index) - 1);
  --reverse-index: calc(var(--num-cards) - var(--index0));
  --reverse-index0: calc(var(--reverse-index) - 1);
  --card-base-y: calc(var(--index0) * var(--card-top-offset));
  --card-hover-y: 0px;
  position: sticky;
  top: var(--card-top);
  transition: transform 0.500s;
  transform: translateY(calc(var(--card-base-y) - var(--card-hover-y)));
  @media (max-height: 800px) {
    position: static;
  }
}

.card, .spy {
  --index: attr(data-index);
  grid-row: var(--index);
  grid-column: 1;
  scroll-margin-top: var(--card-top);
}

.card__content {
  transform-origin: 50% 0%;
  will-change: transform;
}

a.card__header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: calc((var(--card-top-offset) + 0.125em) * 1 / (1.1 - 0.1 * var(--num-cards)));
  cursor: pointer;
  background-color: color-mix(in srgb, functions.color(bg, 4) 25%, transparent);
  border-top-left-radius: .25rem;
  border-top-right-radius: .25rem;
  z-index: 1;
  @media (max-height: 800px) {
    display: none;
  }
}

.card:has(.card__header:hover) {
  --card-hover-y: calc(0.125em * 1 / (1.1 - 0.1 * var(--reverse-index)));
  transition: transform 0.125s;
}

@supports (view-timeline-name: --cards-element-scrolls-in-body) {
  @keyframes scale {
    to {
      transform: scale(calc(1.1 - 0.1 * var(--reverse-index)));
    }
  }

  #cards {
    view-timeline-name: --cards-element-scrolls-in-body;
  }

  .card__content {
    animation: linear scale forwards;
    animation-timeline: --cards-element-scrolls-in-body;
    animation-range: exit-crossing calc(var(--index0) / var(--num-cards) * 100%) exit-crossing calc((var(--index)) / var(--num-cards) * 100%);
  }
}

div:has(> .section-title) {
  position: relative;
}

div:has(> .section-title)::after, .with-divider::after {
  content: '';
  position: absolute;
  bottom: -24px;
  left: 0;
  right: 0;
  margin: auto;
  width: min(8vw, 80px);
  height: 2px;
  border-radius: 1px;
  background: functions.color(bg, 4);
}

#nasa-svg {
  width: 184px;
  height: 220px;
  filter: grayscale(1);
  opacity: .85;
  transform: scale(0.85);
  mix-blend-mode: luminosity;
  transition: filter 0.75s, opacity 0.75s;
  &:hover {
    filter: grayscale(0);
    opacity: 1;
    mix-blend-mode: normal;
    transition: filter 0.125s, opacity 0.125s;
  }
}

#logo-graveyard {
  margin-top: -82px;
}

.logo-graveyard {
  flex-wrap: wrap; 
  align-items: center;
  justify-content: center;
  user-select: none;
  gap: 24px;
  filter: grayscale(1);
  @media (prefers-color-scheme: dark) {
    filter: grayscale(1) invert(1);
  }
  > img {
    position: relative;
    top: -3px;
  }
}

.avatar-stack {
  align-items: center;
  justify-content: center;
  padding-left: 16px;
}

.avatar-stack-item {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  object-fit: cover;
  border: 1px solid functions.color(bg, 4);
  margin-left: -16px;
}

details[name="faq"] {
  border: 1px solid functions.color(bg, 4);
  border-radius: 3px;
  padding: 16px;
  margin-bottom: 16px;
}

@media (pointer: coarse) or (max-width: 960px) {
  sl-carousel::part(navigation) {
    display: none;
  }
}

/*--------------------------------------------------------------
# Web App
--------------------------------------------------------------*/
#root {
  overflow: hidden;
  overflow: clip;
  border: 1px solid functions.color(bg, 4);
}
@media (display-mode: window-controls-overlay) or (display-mode: standalone) {
  .container, .hero, .site-header, .site-footer { display: contents!important }
  .container > *:not(#root) { display: none!important }
  #root {
    width: 100vw;
    height: 100vh;
    height: 100dvh;
    max-width: none;
    max-height: none;
    margin: 0;
    padding: 0;
  }
}
.app {
  .container, .hero, .site-header, .site-footer { display: contents!important }
  .container > *:not(#root) { display: none!important }
  #root {
    width: 100%;
    height: 100vh;
    height: 100dvh;
    max-width: none;
    max-height: none;
    margin: 0;
    padding: 0;
  }
}
body:not(.app) .scroller { overscroll-behavior: initial!important; }
